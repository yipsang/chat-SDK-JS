{"version":3,"sources":["bundle.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","skygearChat","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","SkygearChatContainer","undefined","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_skygear","_skygear2","_underscore","_underscore2","_pubsub","_pubsub2","Conversation","Record","extend","Message","Receipt","UserConversation","participants","title","arguments","meta","options","lambda","then","result","conversation","user","distinctByParticipants","createConversation","conversationID","includeLastMessage","data","page","pageSize","conversations","map","record","query","Query","equalTo","Reference","auth","currentUser","id","publicDB","records","newConversation","_id","save","conversation_id","parseID","participant_ids","admins","admin_ids","body","metadata","asset","message","Asset","attachment","skyAsset","file","name","limit","beforeTime","order","params","before_time","results","message_data","markAsDelivered","bind","messageID","receipts","messages","message_ids","m","_getUserConversation","uc","last_read_message","last_read_message_ref","unread_count","event","pubsub","sendTyping","callback","subscribeTyping","subscribeAllTyping","handler","unsubscribeTyping","subscribeMessage","unsubscribeMessage","get","chatContainer","./pubsub","underscore","2","_container","_container2","_utils","utils","newObj","hasOwnProperty","./container.js","./utils.js","3","_uuid","_uuid2","UserChannel","SkygearChatPubsub","container","userChannel","dispatch","getUserChannel","subscribeDispatch","typingHandler","allTypingHandler","messageHandler","channel","on","payload","dispatchTyping","dispatchUpdate","record_type","event_type","original_record","forEach","ah","handlers","h","state","Date","push","conversationHandler","index","indexOf","splice","Promise","resolve","privateDB","v4","uuid","4","createTypingDetector","stopTyping","sendTypingIndicator","debounceTimer","startTyping","setTimeout","debounceTime","resetTimer","clearTimeout","_ref","_ref$debounceTime","recordType","5","createReduce","dir","iterator","iteratee","memo","keys","currentKey","context","optimizeCb","isArrayLike","_","createPredicateIndexFinder","array","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","Math","max","min","slice","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","ObjProto","prop","has","contains","root","previousUnderscore","ArrayProto","Array","FuncProto","Function","toString","nativeIsArray","isArray","nativeKeys","nativeBind","nativeCreate","create","Ctor","_wrapped","VERSION","func","argCount","other","collection","accumulator","apply","identity","isObject","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","source","baseCreate","MAX_ARRAY_INDEX","pow","each","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","select","list","reject","negate","every","all","some","any","includes","include","fromIndex","guard","values","invoke","method","args","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","set","shuffled","random","sample","sortBy","criteria","sort","left","right","b","group","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","j","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","object","findLastIndex","low","high","mid","floor","lastIndexOf","range","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","bound","concat","partial","boundArgs","position","bindAll","memoize","hasher","cache","address","delay","wait","defer","throttle","timeout","previous","later","leading","now","remaining","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","names","extendOwn","assign","pick","oiteratee","omit","String","defaults","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","isElement","nodeType","type","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","join","testRegexp","RegExp","replaceRegexp","string","test","replace","escape","unescape","fallback","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","render","chain","_chain","mixin","valueOf","toJSON","6","v1","./v1","./v4","7","bytesToUuid","buf","bth","byteToHex","substr","8","rng","crypto","msCrypto","getRandomValues","rnds8","Uint8Array","rnds","9","clockseq","_clockseq","msecs","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","node","_nodeId","_seedBytes","./lib/bytesToUuid","./lib/rng","10","ii"],"mappings":"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","file":"skygear-chat.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.skygearChat = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SkygearChatContainer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _skygear = (typeof window !== \"undefined\" ? window['skygear'] : typeof global !== \"undefined\" ? global['skygear'] : null);\n\nvar _skygear2 = _interopRequireDefault(_skygear);\n\nvar _underscore = require('underscore');\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nvar _pubsub = require('./pubsub');\n\nvar _pubsub2 = _interopRequireDefault(_pubsub);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Conversation = _skygear2.default.Record.extend('conversation');\nvar Message = _skygear2.default.Record.extend('message');\nvar Receipt = _skygear2.default.Record.extend('receipt');\nvar UserConversation = _skygear2.default.Record.extend('user_conversation');\n/**\n * SkygearChatContainer provide API access to the chat plugin.\n */\n\nvar SkygearChatContainer = exports.SkygearChatContainer = function () {\n  function SkygearChatContainer() {\n    _classCallCheck(this, SkygearChatContainer);\n  }\n\n  _createClass(SkygearChatContainer, [{\n    key: 'createConversation',\n\n    /**\n     * createConversation create an conversation with provided participants and\n     * title.\n     *\n     * Duplicate call of createConversation with same list of participants will\n     * return the different conversation, unless `distinctByParticipants` in\n     * options is set to true. By default `distinctByParticipants` is false.\n     *\n     * Adding or removing participants from a distinct conversation (see below)\n     * makes it non-distinct.\n     *\n     * For application specific attributes, you are suggested to put them as\n     * meta.\n     *\n     * All participant will be admin unless specific in options.admins\n     *\n     * @example\n     * const skygearChat = require('skygear-chat');\n     *\n     * skygearChat.createConversation([userBen], 'Greeting')\n     *   .then(function (conversation) {\n     *     console.log('Conversation created!', conversation);\n     *   }, function (err) {\n     *     console.log('Conversation created fails');\n     *   });\n     *\n     * @param {[]User} participants - array of Skygear Users\n     * @param {string} title - string for describing the conversation topic\n     * @param {object} meta - attributes for application specific purpose\n     * @param {object} [options] - options for the conversation, avaliable options `distinctByParticipants` and `admins`\n     *\n     * @return {Promise<Conversation>} - Promise of the new Conversation Record\n     */\n    value: function createConversation(participants) {\n      var title = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var meta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n      return _skygear2.default.lambda('chat:create_conversation', [participants, title, meta, options]).then(function (result) {\n        return new Conversation(result.conversation);\n      });\n    }\n\n    /**\n     * createDirectConversation is a helper function will create conversation\n     * with distinctByParticipants set to true\n     *\n     * @example\n     * const skygearChat = require('skygear-chat');\n     *\n     * skygearChat.createDirectConversation(userBen, 'Greeting')\n     *   .then(function (conversation) {\n     *     console.log('Conversation created!', conversation);\n     *   }, function (err) {\n     *     console.log('Conversation created fails');\n     *   });\n     *\n     * @param {User} user - Skygear Users\n     * @param {string} title - string for describing the conversation topic\n     * @param {object} meta - attributes for application specific purpose\n     * @param {object} [options] - options for the conversation, avaliable options `admins`\n     *\n     * @return {Promise<Conversation>} - Promise of the new Conversation Record\n     */\n\n  }, {\n    key: 'createDirectConversation',\n    value: function createDirectConversation(user) {\n      var title = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var meta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n      options.distinctByParticipants = true;\n      return this.createConversation([user], title, meta, options);\n    }\n\n    /**\n     * getConversation query a Conversation Record from Skygear\n     *\n     * @param {string} conversationID - ConversationID\n     * @param {boolean} [includeLastMessage=true] - message is fetched and assigned to each conversation object.\n     * @return {Promise<Conversation>}  A promise to array of Conversation\n     */\n\n  }, {\n    key: 'getConversation',\n    value: function getConversation(conversationID) {\n      var includeLastMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      return _skygear2.default.lambda('chat:get_conversation', [conversationID, includeLastMessage]).then(function (data) {\n        if (data.conversation === null) {\n          throw new Error('no conversation found');\n        }\n        return new Conversation(data.conversation);\n      });\n    }\n\n    /**\n     * getConversations query a list of Conversation Records from Skygear which\n     * are readable to the current user\n     *\n     * @param {number} [page=1] - Which page to display, default to the 1. The\n     * first page\n     * @param {number} [pageSize=50] - How many item pre page, default to 50.\n     * @param {boolean} [includeLastMessage=true] - message is fetched and assigned to each conversation object.\n     * @return {Promise<[]Conversation>} A promise to array of Conversation.\n     */\n\n  }, {\n    key: 'getConversations',\n    value: function getConversations() {\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n      var includeLastMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      return _skygear2.default.lambda('chat:get_conversations', [page, pageSize, includeLastMessage]).then(function (data) {\n        return data.conversations.map(function (record) {\n          return new Conversation(record);\n        });\n      });\n    }\n\n    /**\n     * _getUserConversation query a UserConversation record of current logged\n     * in user by conversation.id\n     *\n     * @param {Conversation} conversation - Conversation\n     * @return {Promise<UserConversation>} - A promise to UserConversation Recrod\n     * @private\n     */\n\n  }, {\n    key: '_getUserConversation',\n    value: function _getUserConversation(conversation) {\n      var query = new _skygear2.default.Query(UserConversation);\n      query.equalTo('user', new _skygear2.default.Reference(_skygear2.default.auth.currentUser.id));\n      query.equalTo('conversation', new _skygear2.default.Reference(conversation.id));\n      return _skygear2.default.publicDB.query(query).then(function (records) {\n        if (records.length > 0) {\n          return records[0];\n        }\n        throw new Error('no conversation found');\n      });\n    }\n\n    /**\n     * updateConversation is a helper method for updating a conversation with\n     * the provied title and meta.\n     *\n     * @param {Conversation} conversation - Conversation to update\n     * @param {string} title - new title for describing the conversation topic\n     * @param {object} meta - new attributes for application specific purpose\n     * @return {Promise<Conversation>} - A promise to save result\n     */\n\n  }, {\n    key: 'updateConversation',\n    value: function updateConversation(conversation, title, meta) {\n      var newConversation = new Conversation();\n      newConversation._id = conversation._id;\n      if (title) {\n        newConversation.title = title;\n      }\n      if (meta) {\n        newConversation.meta = meta;\n      }\n      return _skygear2.default.publicDB.save(newConversation);\n    }\n\n    /**\n     * Leave a conversation.\n     *\n     * @param {Conversation} conversation - Conversation to leave\n     * @return {Promise<boolean>} - Promise of result\n     */\n\n  }, {\n    key: 'leaveConversation',\n    value: function leaveConversation(conversation) {\n      return _skygear2.default.lambda('chat:leave_conversation', [conversation._id]).then(function () {\n        return true;\n      });\n    }\n\n    /**\n     * Delete a conversation.\n     *\n     * @param {Conversation} conversation - Conversation to be deleted\n     * @return {Promise<boolean>} - Promise of result\n     */\n\n  }, {\n    key: 'deleteConversation',\n    value: function deleteConversation(conversation) {\n      return _skygear2.default.lambda('chat:delete_conversation', [conversation._id]).then(function () {\n        return true;\n      });\n    }\n\n    /**\n     * addParticipants allow adding participants to a conversation.\n     *\n     * @param {Conversation} conversation - Conversation to update\n     * @param {[]User} participants - array of Skygear User\n     * @return {Promise<Conversation>} - A promise to save result\n     */\n\n  }, {\n    key: 'addParticipants',\n    value: function addParticipants(conversation, participants) {\n      var conversation_id = _skygear2.default.Record.parseID(conversation.id)[1];\n      var participant_ids = _underscore2.default.map(participants, function (user) {\n        return user._id;\n      });\n\n      return _skygear2.default.lambda('chat:add_participants', [conversation_id, participant_ids]).then(function (data) {\n        return new Conversation(data.conversation);\n      });\n    }\n\n    /**\n     * removeParticipants allow removal of participants from a conversation.\n     *\n     * Remove an user from participants of a conversation will also remove it\n     * from admins.\n     * @param {Conversation} conversation - Conversation to update\n     * @param {[]User} participants - array of Skygear User\n     * @return {Promise<COnversation>} - A promise to save result\n     */\n\n  }, {\n    key: 'removeParticipants',\n    value: function removeParticipants(conversation, participants) {\n      var conversation_id = _skygear2.default.Record.parseID(conversation.id)[1];\n      var participant_ids = _underscore2.default.map(participants, function (user) {\n        return user._id;\n      });\n      return _skygear2.default.lambda('chat:remove_participants', [conversation_id, participant_ids]).then(function (data) {\n        return new Conversation(data.conversation);\n      });\n    }\n\n    /**\n     * addAdmins allow adding admins to a conversation.\n     *\n     * The use will also add as participants of the conversation if he is not\n     * already a participants of the conversation.\n     * @param {Conversation} conversation - Conversation to update\n     * @param {[]User} admins - array of Skygear User\n     * @return {Promise<Conversation>} - A promise to save result\n     */\n\n  }, {\n    key: 'addAdmins',\n    value: function addAdmins(conversation, admins) {\n      var conversation_id = _skygear2.default.Record.parseID(conversation.id)[1];\n      var admin_ids = _underscore2.default.map(admins, function (user) {\n        return user._id;\n      });\n      return _skygear2.default.lambda('chat:add_admins', [conversation_id, admin_ids]).then(function (data) {\n        return new Conversation(data.conversation);\n      });\n    }\n\n    /**\n     * removeAdmins allow removal of admins from a conversation.\n     *\n     * The removed user will still as the participants of the conversation.\n     * @param {Conversation} conversation - Conversation to update\n     * @param {[]User} admins - array of Skygear User\n     * @return {Promise<Conversation>} - A promise to save result\n     */\n\n  }, {\n    key: 'removeAdmins',\n    value: function removeAdmins(conversation, admins) {\n      var conversation_id = _skygear2.default.Record.parseID(conversation.id)[1];\n      var admin_ids = _underscore2.default.map(admins, function (user) {\n        return user._id;\n      });\n      return _skygear2.default.lambda('chat:remove_admins', [conversation_id, admin_ids]).then(function (data) {\n        return new Conversation(data.conversation);\n      });\n    }\n\n    /**\n     * createMessage create a message in a conversation.\n     *\n     * A message can be just a text message, or a message with image, audio or\n     * video attachment. Application developer can also save metadata to a\n     * message, so the message can be display as important notice. The metadata\n     * provide flexibility to application to control how to display the message,\n     * like font and color.\n     *\n     * @example\n     * const skygearChat = require('skygear-chat');\n     *\n     * skygearChat.createMessage(\n     *   conversation,\n     *   'Red in color, with attachment',\n     *   {'color': 'red', },\n     *   $('message-asset').files[0],\n     * ).then(function (result) {\n     *   console.log('Save success', result);\n     * });\n     *\n     * @param {Conversation} conversation - create the message in this conversation\n     * @param {string} body - body text of the message\n     * @param {object} metadata - application specific meta data for display\n     * purpose\n     * @param {File|skygear.Asset} asset - Browser file object to be saves as\n     * attachment of this message, also accept skygear.Asset instance\n     * @return {Promise<Message>} - A promise to save result\n     */\n\n  }, {\n    key: 'createMessage',\n    value: function createMessage(conversation, body, metadata, asset) {\n      var message = new Message();\n\n      message.conversation = new _skygear2.default.Reference(conversation.id);\n      message.body = body;\n\n      if (metadata === undefined || metadata === null) {\n        message.metadata = {};\n      } else {\n        message.metadata = metadata;\n      }\n      if (asset) {\n        if (asset instanceof _skygear2.default.Asset) {\n          message.attachment = asset;\n        } else {\n          var skyAsset = new _skygear2.default.Asset({\n            file: asset,\n            name: asset.name\n          });\n          message.attachment = skyAsset;\n        }\n      }\n\n      return _skygear2.default.publicDB.save(message);\n    }\n\n    /**\n     * editMessage edit the body, meta and asset of an existing message\n     *\n     * @example\n     * const skygearChat = require('skygear-chat');\n     * skygearChat.editMessage(\n     *   message,\n     *    'new message Body',\n     * ).then(function(result) {\n     *   console.log('Save success', result);\n     * });\n     *\n     * @param {Message} message - The message object to be edited\n     * @param {string} body - New message body\n     * @param {object} metadata - New application specific meta data for display\n     * purpose, omitting thie parameter will keep the old meta\n     * @param {File} asset - New file object to be saves as attachment of this\n     * message, omitting thie parameter will keep the old asset\n     * @return {Promise<Mesage>} A promise to save result\n     */\n\n  }, {\n    key: 'editMessage',\n    value: function editMessage(message) {\n      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var metadata = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var asset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n      if (body) {\n        message.body = body;\n      }\n      if (metadata) {\n        message.metadata = metadata;\n      }\n      if (asset) {\n        var skyAsset = new _skygear2.default.Asset({\n          file: asset,\n          name: asset.name\n        });\n        message.attachment = skyAsset;\n      }\n      return _skygear2.default.publicDB.save(message);\n    }\n\n    /**\n     * deleteMessage delete an existing message\n     *\n     * @example\n     * const skygearChat = require('skygear-chat');\n     * skygearChat.deleteMessage(\n     *    message\n     * ).then(function(result) {\n     *    console.log('Deletion success', result);\n     * });\n     *\n     * @param {Message} message - The message object to be deleted\n     * @return {Promise<Message>} A promise to deleted message\n     */\n\n  }, {\n    key: 'deleteMessage',\n    value: function deleteMessage(message) {\n      return _skygear2.default.lambda('chat:delete_message', [message._id]).then(function (data) {\n        return new Message(data);\n      });\n    }\n\n    /**\n     * getUnreadCount return following unread count;\n     *\n     * 1. The total unread message count of current user.\n     * 2. The total number of conversation have one or more unread message.\n     *\n     * Format is as follow:\n     * ```\n     * {\n     *   'conversation': 3,\n     *   'message': 23\n     * }\n     * ```\n     *\n     * @example\n     * const skygearChat = require('skygear-chat');¬\n     *\n     * skygearChat.getUnreadCount().then(function (count) {\n     *   console.log('Total message unread count: ', count.message);\n     *   console.log(\n     *     'Total converation have unread message: ',\n     *     count.conversation);\n     * }, function (err) {\n     *   console.log('Error: ', err);\n     * });\n     *\n     * @return {Promise<object>} - A promise to total count object\n     */\n\n  }, {\n    key: 'getUnreadCount',\n    value: function getUnreadCount() {\n      return _skygear2.default.lambda('chat:total_unread');\n    }\n\n    /**\n     * getMessages returns an array of message in a conversation. The way of\n     * query is to provide `limit` and `beforeTime`. The expected way is to\n     * query from the latest message first. And use the message `createdAt` to\n     * query the next pages via setting `beforeTime` when user scroll.\n     *\n     * Once you query specific messages, the SDK will automatically mark the\n     * message as delivery on the server.\n     *\n     * @example\n     * const skygearChat = require('skygear-chat');¬\n     *\n     * const ulNode = document.createElement('UL');\n     * const currentTime = new Date();\n     * skygearChat.getMessages(conversation, 10, currentTime)\n     *   .then(function (messages) {\n     *     let lastMsgTime;\n     *     message.forEach(function (m) {\n     *       const liNode = document.createElement('LI');\n     *       liNode.appendChild(document.createTextNode(m.content));\n     *       ulNode.appendChild(liNode);\n     *       lastMsgTime = m.createAt;\n     *     });\n     *     // Querying next page\n     *     skygearChat.getMessages(conversation, 10, lastMsgTime).then(...);\n     *   }, function (err) {\n     *     console.log('Error: ', err);\n     *   });\n     *\n     * @param {Conversation} conversation - conversation to query\n     * @param {number} [limit=50] - limit the result set, if it is set to too large, may\n     * result in timeout.\n     * @param {Date} beforeTime - specific from which time\n     * @param {string} order - order of the message, 'edited_at' or '_created_at'\n     * @return {Promise<[]Message>} - array of Message records\n     */\n\n  }, {\n    key: 'getMessages',\n    value: function getMessages(conversation) {\n      var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n      var beforeTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n      var conversationID = conversation._id;\n      var params = {\n        conversation_id: conversationID,\n        limit: limit\n      };\n      if (beforeTime) {\n        params.before_time = beforeTime;\n      }\n      if (order) {\n        params.order = order;\n      }\n\n      return _skygear2.default.lambda('chat:get_messages', params).then(function (data) {\n        data.results = data.results.map(function (message_data) {\n          return new Message(message_data);\n        });\n        this.markAsDelivered(data.results);\n        return data.results;\n      }.bind(this));\n    }\n\n    /**\n     * getMessageReceipts returns an array of receipts of a message.\n     * @param {Message} message - the message\n     * @return {Promise<[]Receipt>} - array of Receipt records\n     */\n\n  }, {\n    key: 'getMessageReceipts',\n    value: function getMessageReceipts(message) {\n      var messageID = message._id;\n      return _skygear2.default.lambda('chat:get_receipt', [messageID]).then(function (data) {\n        data.receipts = data.receipts.map(function (record) {\n          return new Receipt(record);\n        });\n        return data.receipts;\n      });\n    }\n\n    /**\n     * markAsDelivered mark all messages as delivered\n     *\n     * @param {[]Message} messages - an array of message to mark as delivery\n     * @return {Promise<boolean>}  A promise to result\n     */\n\n  }, {\n    key: 'markAsDelivered',\n    value: function markAsDelivered(messages) {\n      var message_ids = _underscore2.default.map(messages, function (m) {\n        return m._id;\n      });\n      return _skygear2.default.lambda('chat:mark_as_delivered', [message_ids]);\n    }\n\n    /**\n     * markAsRead mark all messages as read\n     *\n     * @param {[]Message} messages - an array of message to mark as read\n     * @return {Promise<boolean>} - A promise to result\n     */\n\n  }, {\n    key: 'markAsRead',\n    value: function markAsRead(messages) {\n      var message_ids = _underscore2.default.map(messages, function (m) {\n        return m._id;\n      });\n      return _skygear2.default.lambda('chat:mark_as_read', [message_ids]);\n    }\n\n    /**\n     * markAsLastMessageRead mark the message as last read message.\n     * Once you mark a message as last read, the system will update the unread\n     * count at UserConversation.\n     *\n     * @param {Conversation} conversation - conversation the message belong to\n     * @param {Message} message - message to be mark as last read\n     * @return {Promise<number>} - A promise to result\n     */\n\n  }, {\n    key: 'markAsLastMessageRead',\n    value: function markAsLastMessageRead(conversation, message) {\n      return this._getUserConversation(conversation).then(function (uc) {\n        uc.last_read_message = new _skygear2.default.Reference(message.id);\n        _skygear2.default.publicDB.save(uc);\n        conversation.last_read_message_ref = uc.last_read_message;\n        conversation.last_read_message = message;\n        return conversation;\n      });\n    }\n\n    /**\n     * getUnreadMessageCount query a unread count of a conversation\n     * @param {Conversation} conversation - conversation to be query\n     * @return {Promise<number>} - A promise to result\n     * @deprecated Use conversation.unread_count instead\n     */\n\n  }, {\n    key: 'getUnreadMessageCount',\n    value: function getUnreadMessageCount(conversation) {\n      return conversation.unread_count;\n    }\n  }, {\n    key: 'sendTypingIndicator',\n\n\n    /**\n     * sendTypingIndicaton send typing indicator to the specified conversation.\n     * The event can be `begin`, `pause` and `finished`.\n     *\n     * @param {Conversation} conversation - conversation to be query\n     * @param {string} event - the event to send\n     * @return {Promise<number>} - A promise to result\n     */\n    value: function sendTypingIndicator(conversation, event) {\n      this.pubsub.sendTyping(conversation, event);\n    }\n\n    /**\n     * Subscribe to typing indicator events in a conversation.\n     *\n     * You are required to specify a conversation where typing indicator\n     * events apply. You may subscribe to multiple conversation at the same time.\n     * To get typing indicator event, call this method with a handler that\n     * accepts following parameters.\n     *\n     * ```\n     * {\n     *   \"user/id\": {\n     *     \"event\": \"begin\",\n     *     \"at\": \"20161116T78:44:00Z\"\n     *   },\n     *   \"user/id2\": {\n     *     \"event\": \"begin\",\n     *     \"at\": \"20161116T78:44:00Z\"\n     *   }\n     * }\n     * ```\n     *\n     * @param {Conversation} conversation - conversation to be query\n     * @param {function} callback - function be be invoke when there is someone\n     * typing in the specificed conversation\n     */\n\n  }, {\n    key: 'subscribeTypingIndicator',\n    value: function subscribeTypingIndicator(conversation, callback) {\n      this.pubsub.subscribeTyping(conversation, callback);\n    }\n\n    /**\n     * Subscribe to typing indicator events in all conversation.\n     *\n     * If you application want to dispatch the typing other than\n     * per-conversation manner. You can use this method in stead of\n     * `subscribeTypingIndicator`.\n     *\n     * The format of payload is similiar with conversation id as key to separate\n     * users' typing event.\n     * To get typing indicator event, call this method with a handler that\n     * accepts following parameters.\n     *\n     * ```\n     * {\n     *   \"conversation/id1\": {\n     *     \"user/id\": {\n     *       \"event\": \"begin\",\n     *       \"at\": \"20161116T78:44:00Z\"\n     *     },\n     *     \"user/id2\": {\n     *       \"event\": \"begin\",\n     *       \"at\": \"20161116T78:44:00Z\"\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @param {function} callback - function be be invoke when there is someone\n     * typing in conversation you have access to.\n     */\n\n  }, {\n    key: 'subscribeAllTypingIndicator',\n    value: function subscribeAllTypingIndicator(callback) {\n      this.pubsub.subscribeAllTyping(callback);\n    }\n\n    /**\n     * unsubscribe one or all typing indicator handler(s) from a conversation.\n     *\n     * @param {Conversation} conversation - conversation to be unsubscribe\n     * @param {function?} handler - Which handler to remove,\n     * if absent, all handlers are removed.\n     */\n\n  }, {\n    key: 'unsubscribeTypingIndicator',\n    value: function unsubscribeTypingIndicator(conversation, handler) {\n      this.pubsub.unsubscribeTyping(conversation, handler);\n    }\n\n    /**\n     * subscribe all message changes event from the system.\n     *\n     * The server will push all messsage change events via UserChannel that\n     * concerning the current user. i.e. all message belongs to a conversation\n     * that the current user have access to.\n     *\n     * The handler will receive following object as parameters\n     *\n     * ```\n     * {\n     *   \"record_type\": \"message\",\n     *   \"event_type\": \"create\",\n     *   \"record\": recordObj,\n     *   \"original_record\": nulll\n     * }\n     * ```\n     *\n     * - `event_type` can be `update`, `create` and `delete`.\n     * - `recordObj` is `skygear.Record` instance.\n     *\n     * Common use-case on the event_type:\n     * `create` - other user send a message to the conversation and insert it in\n     * the conversation view.\n     * `updated` - when a message is received by other, the message delivery\n     * status is changed. For example, from `delivered` to `some_read`. You can\n     * check the `message_status` fields to see the new delivery status.\n     *\n     * @param {function} handler - function to be invoke when a notification arrive\n     */\n\n  }, {\n    key: 'subscribe',\n    value: function subscribe(handler) {\n      this.pubsub.subscribeMessage(handler);\n    }\n    /**\n     * Unsubscribe one or all typing message handler(s)\n     *\n     * @param {function?} handler - Which handler to remove,\n     * if absent, all handlers are removed.\n     */\n\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe(handler) {\n      this.pubsub.unsubscribeMessage(handler);\n    }\n  }, {\n    key: 'pubsub',\n    get: function get() {\n      if (!this._pubsub) {\n        this._pubsub = new _pubsub2.default(_skygear2.default);\n      }\n      return this._pubsub;\n    }\n  }]);\n\n  return SkygearChatContainer;\n}();\n\nvar chatContainer = new SkygearChatContainer();\nexports.default = chatContainer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./pubsub\":3,\"underscore\":5}],2:[function(require,module,exports){\n'use strict';\n\nvar _container = require('./container.js');\n\nvar _container2 = _interopRequireDefault(_container);\n\nvar _utils = require('./utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_container2.default.utils = utils;\n\nmodule.exports = _container2.default;\n\n},{\"./container.js\":1,\"./utils.js\":4}],3:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _skygear = (typeof window !== \"undefined\" ? window['skygear'] : typeof global !== \"undefined\" ? global['skygear'] : null);\n\nvar _skygear2 = _interopRequireDefault(_skygear);\n\nvar _uuid = require('uuid');\n\nvar _uuid2 = _interopRequireDefault(_uuid);\n\nvar _underscore = require('underscore');\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UserChannel = _skygear2.default.Record.extend('user_channel');\n\n/**\n * SkygearChatPubsub is a class for dsipatching the message from user_channel\n * to the coorrect handler according to the event type and registeration\n */\n\nvar SkygearChatPubsub = function () {\n  function SkygearChatPubsub(container) {\n    _classCallCheck(this, SkygearChatPubsub);\n\n    this.pubsub = container.pubsub;\n    this.userChannel = null;\n    this.dispatch = this.dispatch.bind(this);\n    this.getUserChannel().then(this.subscribeDispatch.bind(this));\n    this.typingHandler = {};\n    this.allTypingHandler = [];\n    this.messageHandler = [];\n  }\n\n  _createClass(SkygearChatPubsub, [{\n    key: 'subscribeDispatch',\n    value: function subscribeDispatch(channel) {\n      this.pubsub.on(channel.name, this.dispatch);\n    }\n  }, {\n    key: 'dispatch',\n    value: function dispatch(payload) {\n      if (payload.event === 'typing') {\n        this.dispatchTyping(payload.data);\n      } else {\n        this.dispatchUpdate(payload.data);\n      }\n    }\n  }, {\n    key: 'dispatchUpdate',\n    value: function dispatchUpdate(data) {\n      var obj = {\n        record_type: data.record_type,\n        event_type: data.event_type\n      };\n      obj.record = new _skygear2.default.Record(data.record_type, data.record);\n      if (data.original_record) {\n        obj.original_record = new _skygear2.default.Record(data.record_type, data.original_record);\n      }\n      _underscore2.default.forEach(this.messageHandler, function (handler) {\n        handler(obj);\n      });\n    }\n  }, {\n    key: 'dispatchTyping',\n    value: function dispatchTyping(data) {\n      _underscore2.default.forEach(this.allTypingHandler, function (ah) {\n        ah(data);\n      });\n      _underscore2.default.forEach(data, function (t, conversationID) {\n        var handlers = this.typingHandler[conversationID];\n        _underscore2.default.forEach(handlers, function (h) {\n          h(t);\n        });\n      }.bind(this));\n    }\n  }, {\n    key: 'sendTyping',\n    value: function sendTyping(conversation, state) {\n      _skygear2.default.lambda('chat:typing', [conversation._id, state, new Date()]);\n    }\n  }, {\n    key: 'subscribeAllTyping',\n    value: function subscribeAllTyping(handler) {\n      this.allTypingHandler.push(handler);\n    }\n  }, {\n    key: 'subscribeTyping',\n    value: function subscribeTyping(conversation, handler) {\n      if (!this.typingHandler[conversation.id]) {\n        this.typingHandler[conversation.id] = [];\n      }\n      this.typingHandler[conversation.id].push(handler);\n    }\n  }, {\n    key: 'unsubscribeTyping',\n    value: function unsubscribeTyping(conversation, handler) {\n      var conversationHandler = this.typingHandler[conversation.id];\n      if (!conversationHandler) {\n        return;\n      }\n      var index = conversationHandler.indexOf(handler);\n      if (!handler || index === -1) {\n        this.typingHandler[conversation.id] = [];\n      } else {\n        conversationHandler.splice(index, 1);\n      }\n    }\n  }, {\n    key: 'subscribeMessage',\n    value: function subscribeMessage(handler) {\n      this.messageHandler.push(handler);\n    }\n  }, {\n    key: 'unsubscribeMessage',\n    value: function unsubscribeMessage(handler) {\n      var index = this.messageHandler.indexOf(handler);\n      if (!handler || index === -1) {\n        this.messageHandler = [];\n      } else {\n        this.messageHandler.splice(index, 1);\n      }\n    }\n  }, {\n    key: 'getUserChannel',\n    value: function getUserChannel() {\n      if (this.userChannel) {\n        return Promise.resolve(this.userChannel);\n      }\n      var query = new _skygear2.default.Query(UserChannel);\n      return _skygear2.default.privateDB.query(query).then(function (records) {\n        if (records.length > 0) {\n          this.userChannel = records[0];\n          return this.userChannel;\n        }\n        return null;\n      }.bind(this)).then(function (record) {\n        if (record === null) {\n          var channel = new UserChannel();\n          channel.name = _uuid2.default.v4();\n          return _skygear2.default.privateDB.save(channel);\n        }\n        this.userChannel = record;\n        return this.userChannel;\n      }.bind(this));\n    }\n  }]);\n\n  return SkygearChatPubsub;\n}();\n\nexports.default = SkygearChatPubsub;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"underscore\":5,\"uuid\":6}],4:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createTypingDetector = createTypingDetector;\n\nvar _container = require('./container.js');\n\nvar _container2 = _interopRequireDefault(_container);\n\nvar _skygear = (typeof window !== \"undefined\" ? window['skygear'] : typeof global !== \"undefined\" ? global['skygear'] : null);\n\nvar _skygear2 = _interopRequireDefault(_skygear);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Detects whether the user is typing in an input field and send typing events to the server.\n *\n * @example\n * <script>\n *  var typing = createTypingDetector(conversation);\n * </script>\n * <input type=text oninput=\"typing()\" />\n *\n * @param {Conversation} conversation - send typing events to this conversation.\n * @param {Object} [options]\n * @param {number} [options.debounceTime = 3000] - interger of miliseconds to debounce calls\n * @return {function}\n */\nfunction createTypingDetector(conversation) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$debounceTime = _ref.debounceTime,\n      debounceTime = _ref$debounceTime === undefined ? 3000 : _ref$debounceTime;\n\n  if (!(conversation instanceof _skygear2.default.Record && conversation.recordType === 'conversation')) {\n    throw new Error('TypingDetector expects Conversation, instead got ' + conversation + '.');\n  }\n  var debounceTimer = null;\n  function stopTyping() {\n    _container2.default.sendTypingIndicator(conversation, 'finished');\n    debounceTimer = null;\n  }\n  function startTyping() {\n    _container2.default.sendTypingIndicator(conversation, 'begin');\n    debounceTimer = setTimeout(stopTyping, debounceTime);\n  }\n  function resetTimer() {\n    clearTimeout(debounceTimer);\n    debounceTimer = setTimeout(stopTyping, debounceTime);\n  }\n  return function () {\n    if (debounceTimer) {\n      resetTimer();\n    } else {\n      startTyping();\n    }\n  };\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./container.js\":1}],5:[function(require,module,exports){\n//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n},{}],6:[function(require,module,exports){\nvar v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n},{\"./v1\":9,\"./v4\":10}],7:[function(require,module,exports){\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n},{}],8:[function(require,module,exports){\n(function (global){\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],9:[function(require,module,exports){\nvar rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n},{\"./lib/bytesToUuid\":7,\"./lib/rng\":8}],10:[function(require,module,exports){\nvar rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n},{\"./lib/bytesToUuid\":7,\"./lib/rng\":8}]},{},[2])(2)\n});"]}